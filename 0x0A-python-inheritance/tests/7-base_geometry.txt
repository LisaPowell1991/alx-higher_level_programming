
The "7-base_geometry" module
-----------------------------

# Import the add_integer function to test
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

SUCCESS CASES:
==============

Positive integer
>>> bg = BaseGeometry()
>>> bg.integer_validator("test", 5)

FAIL CASES:
===========

Test with a string
>>> bg.integer_validator("test", "string")
Traceback (most recent call last):
	...
TypeError: test must be an integer

Negative integer
>>> bg.integer_validator("test", -5)
Traceback (most recent call last):
	...
ValueError: test must be greater than 0

No arguements provided for area()
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented

Trying to pass a zero value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
	...
ValueError: name must be greater than 0

Integer_validator with no arguments
>>> bg = BaseGeometry()
>>> bg.integer_validator("test")
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 1 required positional arguments: 'value'

Integer_validator with no arguments
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
