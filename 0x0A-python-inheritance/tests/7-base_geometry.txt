
The "7-base_geometry" module
-----------------------------

# Import the add_integer function to test
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

SUCCESS CASES:
==============

Positive integer
>>> bg = BaseGeometry()
>>> bg.integer_validator("test", 5)

FAIL CASES:
===========

Test with a non-integer
>>> bg = BaseGeometry()
>>> bg.integer_validator("test", "string")
Traceback (most recent call last):
	...
TypeError: test must be an integer

Negative integer
>>> bg = BaseGeometry()
>>> bg.integer_validator("test", -5)
Traceback (most recent call last):
	...
ValueError: test must be greater than 0

Test with boolean value
>>> bg = BaseGeometry()
>>> bg.integer_validator("test", True)
Traceback (most recent call last):
        ...
TypeError: test must be an integer

Test with zero value
>>> bg = BaseGeometry()
>>> bg.integer_validator("test", 0)
Traceback (most recent call last):
        ...
ValueError: test must be greater than 0

Test with 1 argument passed to integer_validator
>>> bg = BaseGeometry()
>>> bg.integer_validator("test")
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 1 required positional argument" 'value'

Test with 1 argument passed to integer_validator
>>> bg = BaseGeometry()
>>> bg.integer_validator("test")
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 2 required positional argument: 'name' and 'value'

No arguements provided for area()
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented
