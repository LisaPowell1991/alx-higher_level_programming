"""
This module contains tests for the matrix_divided function.
"""

# Import the matrix_divided function to test
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

SUCCESS CASES:
==============
# Test valid division of a matrix by a non-zero divisor

# Check for list with 1 list
>>> matrix = [[1, 2, 3]]
>>> print(matrix_divided(matrix, 2))
[[0.5, 1.0, 1.5]]

# Check for list with 2 lists
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 2))
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test with matrix containing integers and dividing by infinity
>>> matrix = [[2, 4, 6], [8, 10, 12], [14, 16, 18]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

FAIL CASES:
===========

# Test with a non-integer and non-float divisor
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, "2"))
Traceback (most recent call last):
        ...
TypeError: div must be a number

# Test with None matrix
>>> matrix = None
>>> print(matrix_divided(matrix, 5))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test for missing arguments
>>> print(matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# Test with empty matrix
>>> matrix = []
>>> print(matrix_divided(matrix, 5))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test when the matrix contains elements that are not integers or floats
>>> matrix = [[1, 2, '3'], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test when the rows of the matrix have different sizes
>>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
        ...
TypeError: Each row of the matrix must have the same size

# Test when the divisor is not a number (int or float)
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, "not a number"))
Traceback (most recent call last):
        ...
TypeError: div must be a number

# Test division by zero
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
        ...
ZeroDivisionError: division by zero
